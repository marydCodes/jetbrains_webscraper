type: edu
custom_name: What the File?
files:
- name: scraper.py
  visible: true
  learner_created: false
- name: tests.py
  visible: false
  text: |
    import ast
    import re

    import requests
    from hstest.check_result import CheckResult
    from hstest.stage_test import StageTest
    from hstest.test_case import TestCase


    class WebScraperTest(StageTest):
        def generate(self):
            return [TestCase(stdin="https://github.blog/notexisting",
                             check_function=self.check_not_200,
                             attach="https://github.blog/notexisting", time_limit=0),
                    TestCase(stdin="http://httpstat.us/403",
                             check_function=self.check_not_200,
                             attach="http://httpstat.us/403", time_limit=0),
                    TestCase(
                        stdin='http://www.pythonchallenge.com/pc/def/0.html',
                        check_function=self.check_200,
                        attach="http://www.pythonchallenge.com/pc/def/0.html", time_limit=0)]

        def check_200(self, reply, attach):
            try:
                test_content = requests.get(attach).content
            except requests.exceptions.SSLError:
                return CheckResult.wrong("An error occurred when tests tried to connect to the Internet page.\n"
                                         "Please, try again.")
            try:
                with open("source.html", "rb") as f:
                    file_content = f.read()
                    if file_content == test_content:
                        return CheckResult.correct() if "Content saved" in reply and "The URL returned" not in reply \
                            else CheckResult.wrong("Did you notify the user you've saved the content?")
                    else:
                        return CheckResult.wrong("The content of the file is not correct!")
            except FileNotFoundError:
                return CheckResult.wrong("Couldn't find the source.html file")

        def check_not_200(self, reply, attach):
            try:
                status_code = requests.get(attach).status_code
            except requests.exceptions.SSLError:
                return CheckResult.wrong("An error occurred when tests tried to connect to the Internet page.\n"
                                         "Please, try again.")
            if f"The URL returned" in reply and "Content saved" not in reply:
                if str(status_code) in reply:
                    return CheckResult.correct()
                else:
                    return CheckResult.wrong("The returned error doesn't match with the output message.")
            else:
                return CheckResult.wrong("The link returned an error, but your program didn't.")


    if __name__ == '__main__':
        WebScraperTest().run_tests()
  learner_created: false
- name: README.md
  visible: true
  text: |-
    ## About
    You will create a function that takes a website address and a number of webpages as input arguments and then goes all over the website saving every news article on the page to a separate .txt file on your computer.
    ### Learning outcomes
    After finishing the project, youâ€™ll know how to send HTTP-requests and process the responses, how to work with an external library, library documentation, and how to use it for parsing the website data. You will also find out how to make your program save results to a file with the help of Python.
  learner_created: true
feedback_link: https://hyperskill.org/projects/145/stages/783/implement#comment
status: Unchecked
record: -1
